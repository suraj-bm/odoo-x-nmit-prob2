# Generated by Django 4.2.7 on 2025-09-20 17:01

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ChartOfAccounts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("asset", "Asset"),
                            ("liability", "Liability"),
                            ("equity", "Equity"),
                            ("income", "Income"),
                            ("expense", "Expense"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "parent_category",
                    models.CharField(
                        choices=[
                            ("current_assets", "Current Assets"),
                            ("fixed_assets", "Fixed Assets"),
                            ("current_liabilities", "Current Liabilities"),
                            ("long_term_liabilities", "Long Term Liabilities"),
                            ("equity", "Equity"),
                            ("revenue", "Revenue"),
                            ("cost_of_goods_sold", "Cost of Goods Sold"),
                            ("operating_expenses", "Operating Expenses"),
                            ("other_income", "Other Income"),
                            ("other_expenses", "Other Expenses"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Chart of Account",
                "verbose_name_plural": "Chart of Accounts",
                "db_table": "master_chart_of_accounts",
                "ordering": ["code", "name"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("customer", "Customer"),
                            ("vendor", "Vendor"),
                            ("both", "Both"),
                        ],
                        default="customer",
                        max_length=10,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("pincode", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "gst_number",
                    models.CharField(blank=True, max_length=15, null=True, unique=True),
                ),
                (
                    "pan_number",
                    models.CharField(blank=True, max_length=10, null=True, unique=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "db_table": "master_contact",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Product Category",
                "verbose_name_plural": "Product Categories",
                "db_table": "master_product_category",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tax",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "tax_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage"),
                            ("fixed", "Fixed Amount"),
                        ],
                        default="percentage",
                        max_length=10,
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Tax rate (percentage or fixed amount)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "applicable_on",
                    models.CharField(
                        choices=[
                            ("sales", "Sales Only"),
                            ("purchase", "Purchase Only"),
                            ("both", "Both Sales & Purchase"),
                        ],
                        default="both",
                        max_length=10,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tax",
                "verbose_name_plural": "Taxes",
                "db_table": "master_tax",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("sku", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("hsn_code", models.CharField(blank=True, max_length=10, null=True)),
                ("unit_of_measure", models.CharField(default="pcs", max_length=20)),
                (
                    "sales_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Selling price per unit",
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Purchase price per unit",
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "current_stock",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "minimum_stock",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="master.productcategory",
                    ),
                ),
                (
                    "purchase_tax",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tax applicable on purchases",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="purchase_products",
                        to="master.tax",
                    ),
                ),
                (
                    "sales_tax",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tax applicable on sales",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sales_products",
                        to="master.tax",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "master_product",
                "ordering": ["name"],
            },
        ),
    ]
